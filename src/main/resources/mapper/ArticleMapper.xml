<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.frank.model.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="browse_count" jdbcType="INTEGER" property="browseCount" />
    <result column="has_published" jdbcType="INTEGER" property="hasPublished" />
    <result column="document_id" jdbcType="INTEGER" property="documentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.frank.model.Article">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    id, title, version, browse_count, has_published, document_id, create_time, update_time, content
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllDocuments" resultMap="ResultMapWithBLOBs">
    select
    id, title, version, browse_count, has_published, document_id, create_time, update_time, content
    from article
    where id in (select show_id from document where state = 1)
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.frank.model.Article" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into article (id, title, version, 
      browse_count, has_published, document_id, 
      create_time, update_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{browseCount,jdbcType=INTEGER}, #{hasPublished,jdbcType=INTEGER}, #{documentId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.frank.model.Article" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="browseCount != null">
        browse_count,
      </if>
      <if test="hasPublished != null">
        has_published,
      </if>
      <if test="documentId != null">
        document_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="browseCount != null">
        #{browseCount,jdbcType=INTEGER},
      </if>
      <if test="hasPublished != null">
        #{hasPublished,jdbcType=INTEGER},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.model.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="browseCount != null">
        browse_count = #{browseCount,jdbcType=INTEGER},
      </if>
      <if test="hasPublished != null">
        has_published = #{hasPublished,jdbcType=INTEGER},
      </if>
      <if test="documentId != null">
        document_id = #{documentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.frank.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      browse_count = #{browseCount,jdbcType=INTEGER},
      has_published = #{hasPublished,jdbcType=INTEGER},
      document_id = #{documentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.model.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      browse_count = #{browseCount,jdbcType=INTEGER},
      has_published = #{hasPublished,jdbcType=INTEGER},
      document_id = #{documentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectHistoryArticles" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        id, title, version, browse_count, has_published, document_id, create_time, update_time, content
        from article
        where document_id = #{id,jdbcType=INTEGER}
        and has_published = 1
    </select>
</mapper>
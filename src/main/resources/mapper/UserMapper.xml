<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.frank.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="github" jdbcType="VARCHAR" property="github" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `name`, `password`, user_head, email, phone, description, github, weibo
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByNameAndPwd" parameterType="string" resultType="integer">
    select
    id
    from user
    where `password` = #{password,jdbcType=VARCHAR}
    and `name` = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.frank.model.User">
    insert into user (id, `name`, `password`,
      user_head, email, phone, 
      description, github, weibo
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userHead,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, 
      #{description,jdbcType=VARCHAR}, #{github,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.frank.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="github != null">
        github,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.model.User">
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="github != null">
        github = #{github,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.model.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      github = #{github,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
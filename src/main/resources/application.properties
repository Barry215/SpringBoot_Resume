#server
server.port = 8888


#数据库设置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://www.maijinta.top:3306/blog?characterEncoding=UTF-8&useUnicode=true&useSSL=false
spring.datasource.username=frank
spring.datasource.password=Frank315!
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
jdbc.location=/Users/frank/IdeaProjects/SpringBoot_Resume/src/main/resources/library/mysql-connector-java-5.1.39-bin.jar


## Mybatis 配置
#mybatis.typeAliasesPackage=com.frank.model
mybatis.mapperLocations=classpath:mapper/*.xml


#--------------------------
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = SELECT 1 FROM DUAL
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#-------------------------------------

#log
debug=true
logging.config = classpath:logback-spring.xml
#配置完成日志记录的级别控制
#logging.level.* = DEBUG
logging.file = blog.log
#会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）
spring.output.ansi.enabled = DETECT
